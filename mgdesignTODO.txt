=== Coordinate systems

Container => Layer            => Projected/Pixel     => LatLng
(pixels)     (pixels, panned)    (pixels, tiles)     (crs)

=== Done

L.Matrix23
L.Map ; ajout� un _transform

L.Map.getPixelBounds ; voir si n�cessaire de changer
* repr�sente apparemment les bounds en pixel dans l'espace de tuiles global
* la transformation doit probablement se faire dans cet espace
* applique le _transform inverse autour du centre de la map (en pixels)

L.GridLayer._initContainer
* applique une transformation CSS (celle de la map)
* centr�e sur le milieu de la map

appliquer le _tranform de la map aux positions de pictos
* Map.latLngToLayerPoint

* ajout Map._initialCenterPoint & Map._getPixelCenter
** pour appliquer la tranformation au drag

[x] bug zoom out/in modifie le centre courant de la map (apr�s drag)
* Map._resetView ? plutot non
* Map.setView ?
* Map.getCenter ?
* Map.layerPointToLatLng ? ou __Map.containerPointToLayerPoint__ ?
** en fait probablement toutes les fonctions appelant _getMapPanePos
=> __Map.containerPointToLayerPoint__ utilise en fait 'untransform'

=== TODO

g�rer le zoom anim�
* L.DomUtil.setTransform écrase la matrices
* GridLayer._animateZoom modifié, permet de ne pas perdre la matrice ; reste problème pdt la transition
* leaflet ajoute une classe css 'leaflet-zoom-anim' pendant l'animation (transition css sur 'transform')
[x] bug pendant l'animation sur la position des pictos... voir Map._latLngToNewLayerPoint , utilisé par Marker._animateZoom
[ ] bug si drag de la carte et zoom ensuite

L.Bounds ; ajouter une m�thode pour obtenir les 4 coins
L.Map.getPixelOrigin ; voir si � transformer, attention aux r�cursions infinies, utilis� par '_getTopLeftPoint'

=== Ecart�

L.Bounds ; ajouter un constructeur � 4 points (min max fait dans la fonction) => OK, prend d�j� un tableau
L.Transformation ; ajouter des coefs pour avoir une vraie matrice
* trop de regressions possibles ; plutot nouvelle classe Matrix23
L.Map.getBounds ; transformer les quatre coins du pixel bounds puis calculer un nouveau bounds ; non plutot dans getPixelBounds

pour prototyper ; o� mettre la matrice de transformation initiale ?
* si non sp�cifi� :: L.CRS.EPSG3857
* bof non pas dans le CRS..
